{"version":3,"sources":["webpack:///static/js/8.fc0b083161bb22430275.js","webpack:///./~/easy-pie-chart/dist/easypiechart.js"],"names":["webpackJsonp","PeU/","module","exports","__webpack_require__","root","factory","this","CanvasRenderer","el","options","cachedBackground","canvas","document","createElement","appendChild","G_vmlCanvasManager","initElement","ctx","getContext","width","height","size","scaleBy","window","devicePixelRatio","style","join","scale","translate","rotate","Math","PI","radius","lineWidth","scaleColor","scaleLength","Date","now","drawCircle","color","percent","min","max","isNegative","beginPath","arc","strokeStyle","stroke","drawScale","offset","length","fillStyle","save","i","fillRect","restore","reqAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","drawBackground","trackColor","trackWidth","getCanvas","getCtx","clear","clearRect","draw","getImageData","putImageData","lineCap","barColor","bind","animate","from","to","startTime","onStart","animation","process","duration","currentValue","easing","onStep","onStop","opts","defaultOptions","undefined","enabled","x","t","b","c","d","renderer","Error","SVGRenderer","init","hasOwnProperty","jQuery","isFunction","dataset","update","parseFloat","getAttribute","newValue","disableAnimation","enableAnimation"],"mappings":"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","file":"static/js/8.fc0b083161bb22430275.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ \"PeU/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**!\n * easy-pie-chart\n * Lightweight plugin to render simple, animated and retina optimized pie charts\n *\n * @license \n * @author Robert Fleischmann <rendro87@gmail.com> (http://robert-fleischmann.de)\n * @version 2.1.7\n **/\n\n(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return (root['EasyPieChart'] = factory());\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['EasyPieChart'] = factory();\n  }\n}(this, function () {\n\n/**\n * Renderer to render the chart on a canvas object\n * @param {DOMElement} el      DOM element to host the canvas (root of the plugin)\n * @param {object}     options options object of the plugin\n */\nvar CanvasRenderer = function(el, options) {\n\tvar cachedBackground;\n\tvar canvas = document.createElement('canvas');\n\n\tel.appendChild(canvas);\n\n\tif (typeof(G_vmlCanvasManager) === 'object') {\n\t\tG_vmlCanvasManager.initElement(canvas);\n\t}\n\n\tvar ctx = canvas.getContext('2d');\n\n\tcanvas.width = canvas.height = options.size;\n\n\t// canvas on retina devices\n\tvar scaleBy = 1;\n\tif (window.devicePixelRatio > 1) {\n\t\tscaleBy = window.devicePixelRatio;\n\t\tcanvas.style.width = canvas.style.height = [options.size, 'px'].join('');\n\t\tcanvas.width = canvas.height = options.size * scaleBy;\n\t\tctx.scale(scaleBy, scaleBy);\n\t}\n\n\t// move 0,0 coordinates to the center\n\tctx.translate(options.size / 2, options.size / 2);\n\n\t// rotate canvas -90deg\n\tctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);\n\n\tvar radius = (options.size - options.lineWidth) / 2;\n\tif (options.scaleColor && options.scaleLength) {\n\t\tradius -= options.scaleLength + 2; // 2 is the distance between scale and bar\n\t}\n\n\t// IE polyfill for Date\n\tDate.now = Date.now || function() {\n\t\treturn +(new Date());\n\t};\n\n\t/**\n\t * Draw a circle around the center of the canvas\n\t * @param {strong} color     Valid CSS color string\n\t * @param {number} lineWidth Width of the line in px\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\n\t */\n\tvar drawCircle = function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t};\n\n\t/**\n\t * Draw the scale of the chart\n\t */\n\tvar drawScale = function() {\n\t\tvar offset;\n\t\tvar length;\n\n\t\tctx.lineWidth = 1;\n\t\tctx.fillStyle = options.scaleColor;\n\n\t\tctx.save();\n\t\tfor (var i = 24; i > 0; --i) {\n\t\t\tif (i % 6 === 0) {\n\t\t\t\tlength = options.scaleLength;\n\t\t\t\toffset = 0;\n\t\t\t} else {\n\t\t\t\tlength = options.scaleLength * 0.6;\n\t\t\t\toffset = options.scaleLength - length;\n\t\t\t}\n\t\t\tctx.fillRect(-options.size/2 + offset, 0, length, 1);\n\t\t\tctx.rotate(Math.PI / 12);\n\t\t}\n\t\tctx.restore();\n\t};\n\n\t/**\n\t * Request animation frame wrapper with polyfill\n\t * @return {function} Request animation frame method or timeout fallback\n\t */\n\tvar reqAnimationFrame = (function() {\n\t\treturn  window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t}());\n\n\t/**\n\t * Draw the background of the plugin including the scale and the track\n\t */\n\tvar drawBackground = function() {\n\t\tif(options.scaleColor) drawScale();\n\t\tif(options.trackColor) drawCircle(options.trackColor, options.trackWidth || options.lineWidth, 1);\n\t};\n\n  /**\n    * Canvas accessor\n   */\n  this.getCanvas = function() {\n    return canvas;\n  };\n\n  /**\n    * Canvas 2D context 'ctx' accessor\n   */\n  this.getCtx = function() {\n    return ctx;\n  };\n\n\t/**\n\t * Clear the complete canvas\n\t */\n\tthis.clear = function() {\n\t\tctx.clearRect(options.size / -2, options.size / -2, options.size, options.size);\n\t};\n\n\t/**\n\t * Draw the complete chart\n\t * @param {number} percent Percent shown by the chart between -100 and 100\n\t */\n\tthis.draw = function(percent) {\n\t\t// do we need to render a background\n\t\tif (!!options.scaleColor || !!options.trackColor) {\n\t\t\t// getImageData and putImageData are supported\n\t\t\tif (ctx.getImageData && ctx.putImageData) {\n\t\t\t\tif (!cachedBackground) {\n\t\t\t\t\tdrawBackground();\n\t\t\t\t\tcachedBackground = ctx.getImageData(0, 0, options.size * scaleBy, options.size * scaleBy);\n\t\t\t\t} else {\n\t\t\t\t\tctx.putImageData(cachedBackground, 0, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t\tdrawBackground();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tctx.lineCap = options.lineCap;\n\n\t\t// if barcolor is a function execute it and pass the percent as a value\n\t\tvar color;\n\t\tif (typeof(options.barColor) === 'function') {\n\t\t\tcolor = options.barColor(percent);\n\t\t} else {\n\t\t\tcolor = options.barColor;\n\t\t}\n\n\t\t// draw bar\n\t\tdrawCircle(color, options.lineWidth, percent / 100);\n\t}.bind(this);\n\n\t/**\n\t * Animate from some percent to some other percentage\n\t * @param {number} from Starting percentage\n\t * @param {number} to   Final percentage\n\t */\n\tthis.animate = function(from, to) {\n\t\tvar startTime = Date.now();\n\t\toptions.onStart(from, to);\n\t\tvar animation = function() {\n\t\t\tvar process = Math.min(Date.now() - startTime, options.animate.duration);\n\t\t\tvar currentValue = options.easing(this, process, from, to - from, options.animate.duration);\n\t\t\tthis.draw(currentValue);\n\t\t\toptions.onStep(from, to, currentValue);\n\t\t\tif (process >= options.animate.duration) {\n\t\t\t\toptions.onStop(from, to);\n\t\t\t} else {\n\t\t\t\treqAnimationFrame(animation);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\treqAnimationFrame(animation);\n\t}.bind(this);\n};\n\nvar EasyPieChart = function(el, opts) {\n\tvar defaultOptions = {\n\t\tbarColor: '#ef1e25',\n\t\ttrackColor: '#f9f9f9',\n\t\tscaleColor: '#dfe0e0',\n\t\tscaleLength: 5,\n\t\tlineCap: 'round',\n\t\tlineWidth: 3,\n\t\ttrackWidth: undefined,\n\t\tsize: 110,\n\t\trotate: 0,\n\t\tanimate: {\n\t\t\tduration: 1000,\n\t\t\tenabled: true\n\t\t},\n\t\teasing: function (x, t, b, c, d) { // more can be found here: http://gsgd.co.uk/sandbox/jquery/easing/\n\t\t\tt = t / (d/2);\n\t\t\tif (t < 1) {\n\t\t\t\treturn c / 2 * t * t + b;\n\t\t\t}\n\t\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\n\t\t},\n\t\tonStart: function(from, to) {\n\t\t\treturn;\n\t\t},\n\t\tonStep: function(from, to, currentValue) {\n\t\t\treturn;\n\t\t},\n\t\tonStop: function(from, to) {\n\t\t\treturn;\n\t\t}\n\t};\n\n\t// detect present renderer\n\tif (typeof(CanvasRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = CanvasRenderer;\n\t} else if (typeof(SVGRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = SVGRenderer;\n\t} else {\n\t\tthrow new Error('Please load either the SVG- or the CanvasRenderer');\n\t}\n\n\tvar options = {};\n\tvar currentValue = 0;\n\n\t/**\n\t * Initialize the plugin by creating the options object and initialize rendering\n\t */\n\tvar init = function() {\n\t\tthis.el = el;\n\t\tthis.options = options;\n\n\t\t// merge user options into default options\n\t\tfor (var i in defaultOptions) {\n\t\t\tif (defaultOptions.hasOwnProperty(i)) {\n\t\t\t\toptions[i] = opts && typeof(opts[i]) !== 'undefined' ? opts[i] : defaultOptions[i];\n\t\t\t\tif (typeof(options[i]) === 'function') {\n\t\t\t\t\toptions[i] = options[i].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check for jQuery easing\n\t\tif (typeof(options.easing) === 'string' && typeof(jQuery) !== 'undefined' && jQuery.isFunction(jQuery.easing[options.easing])) {\n\t\t\toptions.easing = jQuery.easing[options.easing];\n\t\t} else {\n\t\t\toptions.easing = defaultOptions.easing;\n\t\t}\n\n\t\t// process earlier animate option to avoid bc breaks\n\t\tif (typeof(options.animate) === 'number') {\n\t\t\toptions.animate = {\n\t\t\t\tduration: options.animate,\n\t\t\t\tenabled: true\n\t\t\t};\n\t\t}\n\n\t\tif (typeof(options.animate) === 'boolean' && !options.animate) {\n\t\t\toptions.animate = {\n\t\t\t\tduration: 1000,\n\t\t\t\tenabled: options.animate\n\t\t\t};\n\t\t}\n\n\t\t// create renderer\n\t\tthis.renderer = new options.renderer(el, options);\n\n\t\t// initial draw\n\t\tthis.renderer.draw(currentValue);\n\n\t\t// initial update\n\t\tif (el.dataset && el.dataset.percent) {\n\t\t\tthis.update(parseFloat(el.dataset.percent));\n\t\t} else if (el.getAttribute && el.getAttribute('data-percent')) {\n\t\t\tthis.update(parseFloat(el.getAttribute('data-percent')));\n\t\t}\n\t}.bind(this);\n\n\t/**\n\t * Update the value of the chart\n\t * @param  {number} newValue Number between 0 and 100\n\t * @return {object}          Instance of the plugin for method chaining\n\t */\n\tthis.update = function(newValue) {\n\t\tnewValue = parseFloat(newValue);\n\t\tif (options.animate.enabled) {\n\t\t\tthis.renderer.animate(currentValue, newValue);\n\t\t} else {\n\t\t\tthis.renderer.draw(newValue);\n\t\t}\n\t\tcurrentValue = newValue;\n\t\treturn this;\n\t}.bind(this);\n\n\t/**\n\t * Disable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.disableAnimation = function() {\n\t\toptions.animate.enabled = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Enable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.enableAnimation = function() {\n\t\toptions.animate.enabled = true;\n\t\treturn this;\n\t};\n\n\tinit();\n};\n\nreturn EasyPieChart;\n\n}));\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/8.fc0b083161bb22430275.js","/**!\n * easy-pie-chart\n * Lightweight plugin to render simple, animated and retina optimized pie charts\n *\n * @license \n * @author Robert Fleischmann <rendro87@gmail.com> (http://robert-fleischmann.de)\n * @version 2.1.7\n **/\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function () {\n      return (root['EasyPieChart'] = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['EasyPieChart'] = factory();\n  }\n}(this, function () {\n\n/**\n * Renderer to render the chart on a canvas object\n * @param {DOMElement} el      DOM element to host the canvas (root of the plugin)\n * @param {object}     options options object of the plugin\n */\nvar CanvasRenderer = function(el, options) {\n\tvar cachedBackground;\n\tvar canvas = document.createElement('canvas');\n\n\tel.appendChild(canvas);\n\n\tif (typeof(G_vmlCanvasManager) === 'object') {\n\t\tG_vmlCanvasManager.initElement(canvas);\n\t}\n\n\tvar ctx = canvas.getContext('2d');\n\n\tcanvas.width = canvas.height = options.size;\n\n\t// canvas on retina devices\n\tvar scaleBy = 1;\n\tif (window.devicePixelRatio > 1) {\n\t\tscaleBy = window.devicePixelRatio;\n\t\tcanvas.style.width = canvas.style.height = [options.size, 'px'].join('');\n\t\tcanvas.width = canvas.height = options.size * scaleBy;\n\t\tctx.scale(scaleBy, scaleBy);\n\t}\n\n\t// move 0,0 coordinates to the center\n\tctx.translate(options.size / 2, options.size / 2);\n\n\t// rotate canvas -90deg\n\tctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);\n\n\tvar radius = (options.size - options.lineWidth) / 2;\n\tif (options.scaleColor && options.scaleLength) {\n\t\tradius -= options.scaleLength + 2; // 2 is the distance between scale and bar\n\t}\n\n\t// IE polyfill for Date\n\tDate.now = Date.now || function() {\n\t\treturn +(new Date());\n\t};\n\n\t/**\n\t * Draw a circle around the center of the canvas\n\t * @param {strong} color     Valid CSS color string\n\t * @param {number} lineWidth Width of the line in px\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\n\t */\n\tvar drawCircle = function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t};\n\n\t/**\n\t * Draw the scale of the chart\n\t */\n\tvar drawScale = function() {\n\t\tvar offset;\n\t\tvar length;\n\n\t\tctx.lineWidth = 1;\n\t\tctx.fillStyle = options.scaleColor;\n\n\t\tctx.save();\n\t\tfor (var i = 24; i > 0; --i) {\n\t\t\tif (i % 6 === 0) {\n\t\t\t\tlength = options.scaleLength;\n\t\t\t\toffset = 0;\n\t\t\t} else {\n\t\t\t\tlength = options.scaleLength * 0.6;\n\t\t\t\toffset = options.scaleLength - length;\n\t\t\t}\n\t\t\tctx.fillRect(-options.size/2 + offset, 0, length, 1);\n\t\t\tctx.rotate(Math.PI / 12);\n\t\t}\n\t\tctx.restore();\n\t};\n\n\t/**\n\t * Request animation frame wrapper with polyfill\n\t * @return {function} Request animation frame method or timeout fallback\n\t */\n\tvar reqAnimationFrame = (function() {\n\t\treturn  window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t}());\n\n\t/**\n\t * Draw the background of the plugin including the scale and the track\n\t */\n\tvar drawBackground = function() {\n\t\tif(options.scaleColor) drawScale();\n\t\tif(options.trackColor) drawCircle(options.trackColor, options.trackWidth || options.lineWidth, 1);\n\t};\n\n  /**\n    * Canvas accessor\n   */\n  this.getCanvas = function() {\n    return canvas;\n  };\n\n  /**\n    * Canvas 2D context 'ctx' accessor\n   */\n  this.getCtx = function() {\n    return ctx;\n  };\n\n\t/**\n\t * Clear the complete canvas\n\t */\n\tthis.clear = function() {\n\t\tctx.clearRect(options.size / -2, options.size / -2, options.size, options.size);\n\t};\n\n\t/**\n\t * Draw the complete chart\n\t * @param {number} percent Percent shown by the chart between -100 and 100\n\t */\n\tthis.draw = function(percent) {\n\t\t// do we need to render a background\n\t\tif (!!options.scaleColor || !!options.trackColor) {\n\t\t\t// getImageData and putImageData are supported\n\t\t\tif (ctx.getImageData && ctx.putImageData) {\n\t\t\t\tif (!cachedBackground) {\n\t\t\t\t\tdrawBackground();\n\t\t\t\t\tcachedBackground = ctx.getImageData(0, 0, options.size * scaleBy, options.size * scaleBy);\n\t\t\t\t} else {\n\t\t\t\t\tctx.putImageData(cachedBackground, 0, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t\tdrawBackground();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tctx.lineCap = options.lineCap;\n\n\t\t// if barcolor is a function execute it and pass the percent as a value\n\t\tvar color;\n\t\tif (typeof(options.barColor) === 'function') {\n\t\t\tcolor = options.barColor(percent);\n\t\t} else {\n\t\t\tcolor = options.barColor;\n\t\t}\n\n\t\t// draw bar\n\t\tdrawCircle(color, options.lineWidth, percent / 100);\n\t}.bind(this);\n\n\t/**\n\t * Animate from some percent to some other percentage\n\t * @param {number} from Starting percentage\n\t * @param {number} to   Final percentage\n\t */\n\tthis.animate = function(from, to) {\n\t\tvar startTime = Date.now();\n\t\toptions.onStart(from, to);\n\t\tvar animation = function() {\n\t\t\tvar process = Math.min(Date.now() - startTime, options.animate.duration);\n\t\t\tvar currentValue = options.easing(this, process, from, to - from, options.animate.duration);\n\t\t\tthis.draw(currentValue);\n\t\t\toptions.onStep(from, to, currentValue);\n\t\t\tif (process >= options.animate.duration) {\n\t\t\t\toptions.onStop(from, to);\n\t\t\t} else {\n\t\t\t\treqAnimationFrame(animation);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\treqAnimationFrame(animation);\n\t}.bind(this);\n};\n\nvar EasyPieChart = function(el, opts) {\n\tvar defaultOptions = {\n\t\tbarColor: '#ef1e25',\n\t\ttrackColor: '#f9f9f9',\n\t\tscaleColor: '#dfe0e0',\n\t\tscaleLength: 5,\n\t\tlineCap: 'round',\n\t\tlineWidth: 3,\n\t\ttrackWidth: undefined,\n\t\tsize: 110,\n\t\trotate: 0,\n\t\tanimate: {\n\t\t\tduration: 1000,\n\t\t\tenabled: true\n\t\t},\n\t\teasing: function (x, t, b, c, d) { // more can be found here: http://gsgd.co.uk/sandbox/jquery/easing/\n\t\t\tt = t / (d/2);\n\t\t\tif (t < 1) {\n\t\t\t\treturn c / 2 * t * t + b;\n\t\t\t}\n\t\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\n\t\t},\n\t\tonStart: function(from, to) {\n\t\t\treturn;\n\t\t},\n\t\tonStep: function(from, to, currentValue) {\n\t\t\treturn;\n\t\t},\n\t\tonStop: function(from, to) {\n\t\t\treturn;\n\t\t}\n\t};\n\n\t// detect present renderer\n\tif (typeof(CanvasRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = CanvasRenderer;\n\t} else if (typeof(SVGRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = SVGRenderer;\n\t} else {\n\t\tthrow new Error('Please load either the SVG- or the CanvasRenderer');\n\t}\n\n\tvar options = {};\n\tvar currentValue = 0;\n\n\t/**\n\t * Initialize the plugin by creating the options object and initialize rendering\n\t */\n\tvar init = function() {\n\t\tthis.el = el;\n\t\tthis.options = options;\n\n\t\t// merge user options into default options\n\t\tfor (var i in defaultOptions) {\n\t\t\tif (defaultOptions.hasOwnProperty(i)) {\n\t\t\t\toptions[i] = opts && typeof(opts[i]) !== 'undefined' ? opts[i] : defaultOptions[i];\n\t\t\t\tif (typeof(options[i]) === 'function') {\n\t\t\t\t\toptions[i] = options[i].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check for jQuery easing\n\t\tif (typeof(options.easing) === 'string' && typeof(jQuery) !== 'undefined' && jQuery.isFunction(jQuery.easing[options.easing])) {\n\t\t\toptions.easing = jQuery.easing[options.easing];\n\t\t} else {\n\t\t\toptions.easing = defaultOptions.easing;\n\t\t}\n\n\t\t// process earlier animate option to avoid bc breaks\n\t\tif (typeof(options.animate) === 'number') {\n\t\t\toptions.animate = {\n\t\t\t\tduration: options.animate,\n\t\t\t\tenabled: true\n\t\t\t};\n\t\t}\n\n\t\tif (typeof(options.animate) === 'boolean' && !options.animate) {\n\t\t\toptions.animate = {\n\t\t\t\tduration: 1000,\n\t\t\t\tenabled: options.animate\n\t\t\t};\n\t\t}\n\n\t\t// create renderer\n\t\tthis.renderer = new options.renderer(el, options);\n\n\t\t// initial draw\n\t\tthis.renderer.draw(currentValue);\n\n\t\t// initial update\n\t\tif (el.dataset && el.dataset.percent) {\n\t\t\tthis.update(parseFloat(el.dataset.percent));\n\t\t} else if (el.getAttribute && el.getAttribute('data-percent')) {\n\t\t\tthis.update(parseFloat(el.getAttribute('data-percent')));\n\t\t}\n\t}.bind(this);\n\n\t/**\n\t * Update the value of the chart\n\t * @param  {number} newValue Number between 0 and 100\n\t * @return {object}          Instance of the plugin for method chaining\n\t */\n\tthis.update = function(newValue) {\n\t\tnewValue = parseFloat(newValue);\n\t\tif (options.animate.enabled) {\n\t\t\tthis.renderer.animate(currentValue, newValue);\n\t\t} else {\n\t\t\tthis.renderer.draw(newValue);\n\t\t}\n\t\tcurrentValue = newValue;\n\t\treturn this;\n\t}.bind(this);\n\n\t/**\n\t * Disable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.disableAnimation = function() {\n\t\toptions.animate.enabled = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Enable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.enableAnimation = function() {\n\t\toptions.animate.enabled = true;\n\t\treturn this;\n\t};\n\n\tinit();\n};\n\nreturn EasyPieChart;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/easy-pie-chart/dist/easypiechart.js\n// module id = PeU/\n// module chunks = 8"],"sourceRoot":""}